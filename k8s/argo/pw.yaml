apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: test-
spec:
  entrypoint: tests
  podGC:
    strategy: OnPodCompletion
  ttlStrategy:
    secondsAfterCompletion: 60
  templates:
  - name: tests
    steps:
    - - name: get-tests
        template: gen-test-list
    # Iterate over the list of tests generated by the gen-test-list step above
    - - name: run-tests
        template: pw
        arguments:
          parameters:
            - name: test
              value: "{{item.test}}"
        withParam: "{{steps.get-tests.outputs.result}}"

  #Generate a list of tests and indexes in JSON format
  - name: gen-test-list
    script:
      image: us-central1-docker.pkg.dev/core-trees-404818/pw-k8s/pw-k8s:latest
      command: [node]
      source: |
        const { exec } = require("child_process");

        const getTests = () => {
            return new Promise((resolve, reject) => {
                exec("npx playwright test --repeat-each=100 --list", (error, stdout, stderr) => {
                if (error) {
                    reject(error);
                    return;
                }
                if (stderr) {
                    reject(stderr);
                    return;
                }
                const tests = stdout
                    .split("\n")
                    .filter((line) => line.includes("›"))
                    .map((line, index) => {
                        const test = line.split("›")[1].trim();
                        return { index: `${index + 1}`, test: test };
                    });
                resolve(tests);
                });
            });
        }

        const writeTests = async () => {
            const tests = await getTests();
            // Put the tests into the stdout
            console.log(JSON.stringify(tests));
            // const testsPath = path.join(__dirname, "../tests.json");
            // fs.writeFileSync(testsPath, JSON.stringify(tests));
        }

        writeTests();

  # Run playwright tests
  - name: pw
    retryStrategy:
      retryPolicy: "Always"
      limit: "2"
    inputs:
      parameters:
        # - name: index
        - name: test
    container:
      resources:
        requests:
          memory: "256Mi"
          cpu: "100m"
      image: us-central1-docker.pkg.dev/core-trees-404818/pw-k8s/pw-k8s:latest # Replace with your own image
      command: ['npx']
      args: ['playwright', 'test', '{{inputs.parameters.test}}']